{"version":3,"sources":["img/profile.jpg","store/index.ts","components/NavMenu.tsx","components/Layout.tsx","components/About.tsx","components/Experience.tsx","components/Education.tsx","components/DevIcon.tsx","components/Skills.tsx","registerServiceWorker.ts","index.tsx","store/configureStore.ts","App.tsx"],"names":["module","exports","reducers","NavMenu","state","isOpen","toggle","setState","Navbar","className","light","id","NavbarBrand","tag","Link","to","src","profile","NavbarToggler","onClick","this","Collapse","navbar","NavItem","NavLink","React","props","Container","children","About","href","icon","faLinkedinIn","faGithub","faFacebookF","Experience","Education","DevIcon","colored","tooltip","title","Skills","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","history","createHashHistory","basename","store","initialState","middleware","thunk","routerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","push","createStore","compose","applyMiddleware","configureStore","ReactDOM","Layout","exact","path","component","getElementById","URL","process","toString","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fc5efdc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.b8b228dd.jpg\";","// The top-level state object\r\nexport interface ApplicationState {\r\n}\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n};\r\n\r\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\r\n// correctly typed to match your store.\r\nexport interface AppThunkAction<TAction> {\r\n    (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\r\n}\r\n","import * as React from 'react';\r\nimport { Collapse, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../scss/resume.scss\";\r\nimport profile from \"../img/profile.jpg\";\r\n\r\nexport default class NavMenu extends React.PureComponent<{}, { isOpen: boolean }> {\r\n    public state = {\r\n        isOpen: false\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <header>\r\n                <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" light id=\"sideNav\">\r\n                    <NavbarBrand tag={Link} to=\"/\">\n                        <span className=\"d-block d-lg-none\">Jake Daryl Moresca</span>\n                        <span className=\"d-none d-lg-block\">\n                            <img className=\"img-fluid img-profile rounded-circle mx-auto mb-2\" src={profile} />\n                        </span>\r\n                    </NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} className=\"navbar-toggler\" />\r\n                    <Collapse className=\"collapse navbar-collapse\" isOpen={this.state.isOpen} navbar>\r\n                        <ul className=\"navbar-nav\">\r\n                            <NavItem>\r\n                                <NavLink tag={Link} className=\"nav-link js-scroll-trigger\" to=\"/\">About</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} className=\"nav-link js-scroll-trigger\" to=\"/experience\">Experience</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} className=\"nav-link js-scroll-trigger\" to=\"/education\">Education</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} className=\"nav-link js-scroll-trigger\" to=\"/skills\">Skills</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink tag={Link} className=\"nav-link js-scroll-trigger\" to=\"/projects\">Personal Projects</NavLink>\r\n                            </NavItem>\r\n                        </ul>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n\r\n    private toggle = () =>\r\n    {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport NavMenu from './NavMenu';\r\n\r\nexport default (props: { children?: React.ReactNode }) => (\r\n    <React.Fragment>\r\n        <NavMenu/>\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    </React.Fragment>\r\n);\r\n","import * as React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLinkedinIn, faGithub, faFacebookF } from '@fortawesome/free-brands-svg-icons'\r\n\r\nexport const About: React.FunctionComponent = () =>\r\n{\r\n    return (\r\n        <section className=\"resume-section p-3 p-lg-5 d-flex align-items-center\" id=\"about\">\n            <div className=\"w-100\">\n                <h1 className=\"mb-0\">Jake Daryl\n                    <span className=\"text-primary\"> Moresca</span>\n                </h1>\n                <div className=\"subheading mb-5\">\n                    6 Fleur de liz st. Cainta Green Park Village Cainta, Rizal, 1900, Philippines | +639478904784 | \n                    <a href=\"mailto:jmoresca@outlook.com\"> jmoresca@outlook.com</a>\n                </div>\n                <p className=\"lead mb-5\">\n                    Senior Software Engineer with more than 8 years of industry experience on delivering high quality of work with acceptable timeline. My proficiency on C# and .NET Framework makes me committed on improving my work and knowledge on software development.\n                </p>\n                <div className=\"social-icons\">\n                    <a href=\"https://www.linkedin.com/in/jake-daryl-moresca-12b2458a/\">\n                        <FontAwesomeIcon icon={faLinkedinIn} />\n                    </a>\n                    <a href=\"https://github.com/jakemoresca\">\n                        <FontAwesomeIcon icon={faGithub} />\n                    </a>\n                    <a href=\"https://www.facebook.com/dauntless0928\">\n                        <FontAwesomeIcon icon={faFacebookF} />\n                    </a>\n                </div>\n            </div>\n        </section>\r\n    );\r\n}","import * as React from \"react\";\r\n\r\nexport const Experience: React.FunctionComponent = () =>\r\n{\r\n    return (\r\n        <section className=\"resume-section p-3 p-lg-5 d-flex justify-content-center\" id=\"experience\">\n            <div className=\"w-100\">\n                <h2 className=\"mb-5\">Experience</h2>\n\n                <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n                    <div className=\"resume-content\">\n                        <h3 className=\"mb-0\">Senior Software Engineer</h3>\n                        <div className=\"subheading mb-3\">Infor</div>\n                        <ul>\n                            <li>Worked as a Technical Lead for the whole team which is responsible for the overall architecture of the solution. Co-leads a technical scrum team together with other sub-team technical leads.</li>\n                            <li>Upgraded CPQ’s designer legacy SPA implementation from using KnockoutJs and Backbone to using React, Redux built using Typescript.</li>\n                            <li>Successfully implemented Jest and Enzyme as a new test framework for testing React components and Redux reducers. This speeds up writing test by 80% faster due to the built-in snapshot testing included in Jest and Enzyme.</li>\n                            <li>Rebuilt Infor CPQ’s LESS compiler algorithm to lessen the compilation time from 30 seconds down to less than a second.</li>\n                            <li>Minimizes code review efforts by developing a set of tools to improve integration test readability and reusability. </li>\n                            <li>Successfully led Microsoft Dynamics 365 integration to Infor CPQ by developing REST and SOAP APIs on a microservices architecture.</li>\n                            <li>Implemented Amazon SQS for Infor CPQ’s external notification services which can be consumed for Birst analytics. </li>\n                        </ul>\n                    </div>\n                    <div className=\"resume-date text-md-right\">\n                        <span className=\"text-primary\">November 2018 - Present</span>\n                    </div>\n                </div>\n\n                <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n                    <div className=\"resume-content\">\n                        <h3 className=\"mb-0\">Software Engineer</h3>\n                        <div className=\"subheading mb-3\">Infor</div>\n                        <ul>\n                            <li>Reduced merging effort for our business objects by 80%. This was accomplished by refactoring the business object publishing logic, continuous collaboration with our development head, and as a part of my initiative during his visit on our office.</li>\n                            <li>Led the security and source code scanning to make sure that every microservices were compliant and secured.</li>\n                            <li>Started the initiative for using React on Infor CPQ designer application by recreating knockout view models and templates into a React components and uses Redux for state management.</li>\n                        </ul>\n                    </div>\n                    <div className=\"resume-date text-md-right\">\n                        <span className=\"text-primary\">November 2015 - November 2018</span>\n                    </div>\n                </div>\n\n                <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n                    <div className=\"resume-content\">\n                        <h3 className=\"mb-0\">Associate Software Engineer</h3>\n                        <div className=\"subheading mb-3\">Infor</div>\n                        <ul>\n                            <li>Successfully implemented proof of concepts of using Bootstrap grid system and LESS.js into Infor Product Configurator’s styling engine.</li>\n                            <li>Resolved a bug for one of our key customers that makes the management team happy.</li>\n                        </ul>\n                    </div>\n                    <div className=\"resume-date text-md-right\">\n                        <span className=\"text-primary\">July 2014 - November 2015</span>\n                    </div>\n                </div>\n\n                <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between\">\n                    <div className=\"resume-content\">\n                        <h3 className=\"mb-0\">Software Developer</h3>\n                        <div className=\"subheading mb-3\">Stellar</div>\n                        <ul>\n                            <li>Created fast and beautiful in-house applications.</li>\n                            <li>Conducted several product roadshows to team leads, managers, and executives.</li>\n                            <li>Understand and follows the company’s Software Development Life Cycle.</li>\n                        </ul>\n                    </div>\n                    <div className=\"resume-date text-md-right\">\n                        <span className=\"text-primary\">July 2011 - July 2014</span>\n                    </div>\n                </div>\n\n            </div>\n\n        </section>\r\n        );\r\n}","import * as React from \"react\";\n\nexport const Education: React.FunctionComponent = () =>\n{\n    return (\n        <section className=\"resume-section p-3 p-lg-5 d-flex align-items-center\" id=\"education\">\n            <div className=\"w-100\">\n                <h2 className=\"mb-5\">Education</h2>\n\n                <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n                    <div className=\"resume-content\">\n                        <h3 className=\"mb-0\">Technological Institute of the Philippines</h3>\n                        <div className=\"subheading mb-3\">Bachelor of Science</div>\n                        <div>Information Technology</div>\n                    </div>\n                    <div className=\"resume-date text-md-right\">\n                        <span className=\"text-primary\">June 2007 - Apr 2011</span>\n                    </div>\n                </div>\n            </div>\n        </section>);\n}","import * as React from \"react\";\r\n\r\ninterface IDevIconProps\r\n{\r\n    tooltip?: string;\r\n    icon: string;\r\n    colored?: boolean;\r\n}\r\n\r\nexport const DevIcon: React.FunctionComponent<IDevIconProps> = ({ icon, colored, tooltip }) =>\r\n{\r\n    return (<i className={`${icon} ${colored == true ? \"colored\" : \"\"}`} title={tooltip}></i>);\r\n}","import * as React from \"react\";\r\nimport { DevIcon } from \"./DevIcon\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDotCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport const Skills: React.FunctionComponent = () =>\r\n{\r\n    return (\r\n        <section className=\"resume-section p-3 p-lg-5 d-flex align-items-center\" id=\"skills\">\n            <div className=\"w-100\">\n                <h2 className=\"mb-5\">Skills</h2>\n\n                <ul className=\"list-inline dev-icons\">\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-csharp-line\" tooltip=\"C#\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-dot-net-plain-wordmark\" tooltip=\".NET Framework / .NET Core\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-html5-plain-wordmark\" tooltip=\"HTML5\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-css3-plain-wordmark\" tooltip=\"CSS3\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-javascript-plain\" tooltip=\"Javascript\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-typescript-plain\" tooltip=\"Typescript\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-jquery-plain-wordmark\" tooltip=\"jQuery\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-react-original-wordmark\" tooltip=\"React\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-less-plain-wordmark\" tooltip=\"Less\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-amazonwebservices-plain-wordmark\" tooltip=\"AWS\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-visualstudio-plain\" tooltip=\"Visual Studio\" colored />\n                    </li>\n                    <li className=\"list-inline-item\">\n                        <DevIcon icon=\"devicon-git-plain-wordmark\" tooltip=\"Git\" colored />\n                    </li>\n                </ul>\r\n\n                <div className=\"subheading mb-3\">Proficient in the following technologies / methodologies:</div>\n                <ul className=\"fa-ul mb-0\">\n                    <li>\n                        C#, .NET Core, Entity Framework, WCF</li>\n                    <li>\n                        ASP.NET, ASP.NET MVC, Web Forms, Win Forms</li>\n                    <li>\n                        Javascript, Typescript, HTML5, CSS3, LESS, Bootstrap</li>\n                    <li>\n                        jQuery, React, Redux, Typescript, KnockoutJs, BackboneJs</li>\n                    <li>\n                        SQL Server, PostgreSql\n                    </li>\n                    <li>\n                        Rhino Mock, Moq, xUnit, jasmine, mocha, sinon, chai, Jest, Enzyme\n                    </li>\n                    <li>\n                        Visual Studio, VS Code, Git, Azure DevOps, Continuous Integration, Continuous Delivery\n                    </li>\n                    <li>\n                        SOLID, OOP, Pair Programming, Agile, Scrum, TDD, Microservices\n                    </li>\n                    <li>\n                        Node.js, npm, Nuget\n                    </li>\n                    <li>\n                        IBM AppScan, OWASP, Veracode\n                    </li>\n                    <li>\n                        AWS, Azure, Amazon SQS, EC2, Load balancer, Cloud Formation, Elastic Search, Docker, Redis\n                    </li>\n                </ul>\n            </div>\n        </section>);\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const url = process.env.PUBLIC_URL as string;\r\n        const publicUrl = new URL(url, window.location.toString());\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing as ServiceWorker;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport \"devicon/devicon.css\";\r\nimport \"devicon/devicon-colors.css\";\r\n\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createHashHistory } from 'history';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href') as string;\r\nconst history = createHashHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();","import { applyMiddleware, combineReducers, compose, createStore, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { History } from 'history';\r\nimport { ApplicationState, reducers } from './';\r\n\r\nexport default function configureStore(history: History, initialState?: ApplicationState) {\r\n    const middleware = [\r\n        thunk,\r\n        routerMiddleware(history)\r\n    ];\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers,\r\n        router: connectRouter(history)\r\n    });\r\n\r\n    const enhancers = [];\r\n    const windowIfDefined = typeof window === 'undefined' ? null : window as any;\r\n    if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n        enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n    }\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ...enhancers)\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { Route } from 'react-router';\r\nimport Layout from './components/Layout';\r\nimport { About } from \"./components/About\";\r\nimport { Experience } from \"./components/Experience\";\r\nimport { Education } from \"./components/Education\";\r\nimport { Skills } from \"./components/Skills\";\r\n\r\nexport default () => (\r\n    <Layout>\r\n        <Route exact path='/' component={About}/>\r\n        <Route path='/experience' component={Experience} />\r\n        <Route path='/education' component={Education} />\r\n        <Route path='/skills' component={Skills} />\r\n        <Route path='/projects' component={Experience} />\r\n    </Layout>\r\n);\r\n"],"sourceRoot":""}